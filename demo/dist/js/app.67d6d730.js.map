{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?0551","webpack:///src/App.vue","webpack:///./src/App.vue?60d0","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/assets/earth_aperture.png","webpack:///./src/assets/gradient.png","webpack:///./src/assets/earth2.jpg","webpack:///./src/assets/标注光圈.png","webpack:///./src/assets/标注.png"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","staticStyle","attrs","staticRenderFns","posArr","radius","planGeometry","group","groupDots","groupLines","groupHalo","aGroup","WaveMeshArr","animateDots","map","width","height","renderer","camera","scene","controls","uniforms2","u_time","globeTextureLoader","camaPositions","initFlag","stars","vIndex","fragmentShader2","vertexShader2","mounted","onload","console","log","tc","methods","Dom","clientWidth","clientHeight","initRenderer","initCamera","initScene","initLight","initEarth","initEarthSprite","initPoints","initGeoJson","initControls","initTween","initDotAndFly","animate","addEventListener","onWindowResize","getPots","lglt2xyz","lon2xyz","lon","x","y","z","createPosition","spherical","phi","theta","position","setFromSpherical","getVCenter","v","divideScalar","getLenVcetor","v1","lerp","v2","len","v1v2Len","setRandomDot","add","dotMesh","waveMesh","createPointMesh","texture","transparent","depthWrite","mesh","scale","set","size","pos","quaternion","setFromUnitVectors","meshNormal","coordVec3","createWaveMesh","color","opacity","_s","Math","random","addLines","setHSL","colors","g","b","positions","points","geometry","setPositions","setColors","linewidth","vertexColors","dashed","curve","lineMesh","Line2","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","containerDom","appendChild","domElement","lookAt","background","fog","OrbitControls","enableDamping","autoRotate","autoRotateSpeed","enablePan","tweena","start","cameraCon","tween1","onUpdate","update","onComplete","ambientLight","directionalLight","normalize","directionalLight2","hemiLight","directionalLight3","castShadow","shadow","top","bottom","left","right","vertex","setAttribute","blending","sizeAttenuation","side","rotation","globeMesh","sprite","createLightPillar","rotateX","PI","translate","textureLoader","load","clone","rotateZ","createLightWaveMesh","initLightPillar","datas","forEach","LightPillar","children","aMesh","animateLine","elem","setTimeout","loader","outLineMap","json","features","coordinates","multiPolygon","polygon","v3ps","province","flyLine","initMap","chinaJson","linGeometry","line","initFlyLine","percents","addAttribute","initLineMaterial","number","speed","uniforms","singleUniforms","vertexShader","textContent","fragmentShader","lineMaterial","aspect","innerWidth","innerHeight","updateProjectionMatrix","renders","clear","render","requestAnimationFrame","material","component","Vue","config","productionTip","h","App","$mount"],"mappings":"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","file":"js/app.67d6d730.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"200vh\",\"position\":\"relative\",\"overflow\":\"hidden\"},attrs:{\"id\":\"container\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\n * @Author: lough\n * @Date: 2021-12-12 09:44:54\n * @LastEditors: Please set LastEditors\n * @LastEditTime: 2021-12-16 11:25:35\n * @Description:\n-->\n\n<template>\n  <div\n    id=\"container\"\n    style=\"width: 100%; height: 200vh; position: relative; overflow: hidden\"\n  />\n</template>\n<script  id=\"vertexShader2\" type=\"x-shader/x-vertex\">\n`\tvarying vec2 vUv;\n\t\t\t   attribute float percent;\n\t\t\t   uniform float u_time;\n\t\t\t   uniform float number;\n\t\t\t   uniform float speed;\n\t\t\t   uniform float length;\n\t\t\t   varying float opacity;\n\t\t\t   uniform float size;\n\t\t\t   void main()\n\t\t\t   {\n\t\t\t       vUv = uv;\n\t\t\t       vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t\t\t       float l = clamp(1.0-length,0.0,1.0);\n\t\t\t       gl_PointSize = clamp(fract(percent*number + l - u_time*number*speed)-l ,0.0,1.) * size * (1./length);\n\t\t\t       opacity = gl_PointSize/size;\n\t\t\t       gl_Position = projectionMatrix * mvPosition;\n\t\t\t   }`;\n</script>\n<script>\nimport * as THREE from \"three\";\nimport { Line2 } from \"three/examples/jsm/lines/Line2\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial.js\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { TWEEN } from \"three/examples/jsm/libs/tween.module.min.js\";\n\nexport default {\n  data() {\n    return {\n      posArr: [\n        {\n          x: -2.2050067398610094,\n          y: 2.609370233463886,\n          z: -3.650908415980897,\n        },\n        {\n          x: -2.1965610576118175,\n          y: 2.1955955192304506,\n          z: -3.9184792759587768,\n        },\n        {\n          x: -2.2290975556080355,\n          y: 2.6054406912933263,\n          z: -3.639066211507457,\n        },\n        {\n          x: 0.5738958419746141,\n          y: -0.44114968930852216,\n          z: 4.9473255920938985,\n        },\n        { x: -0.9326350073394328, y: 2.8399222968004114, z: -4.00812091773949 },\n        { x: 3.469198597393574, y: 1.2295167303380952, z: -3.3842206934036057 },\n        {\n          x: -2.4019084876611916,\n          y: -2.190220428765315,\n          z: 3.7991801866087123,\n        },\n        { x: -2.49363689878109, y: -4.099696049856375, z: 1.4050862307450966 },\n        { x: -2.3729307780326305, y: 2.840227787960863, z: 3.3618901878497454 },\n        {\n          x: -2.0636200279017873,\n          y: 0.7444294629976027,\n          z: -4.493027615657812,\n        },\n        { x: 0.47725894517680106, y: 2.4327372143508037, z: -4.34212085796347 },\n        {\n          x: -2.4777001955161246,\n          y: -1.2092952460724242,\n          z: 4.171163716394502,\n        },\n        {\n          x: -0.03915748918627658,\n          y: -0.008362945319338826,\n          z: 4.999839672648135,\n        },\n        { x: 1.5223738738260317, y: -1.032865814102439, z: -4.649254348640267 },\n        {\n          x: -0.26640112020426315,\n          y: -4.314854187280748,\n          z: 2.5121830716848077,\n        },\n        {\n          x: -4.031470206741836,\n          y: -2.606648761952297,\n          z: -1.3973654511134501,\n        },\n        { x: 0.8544382232162094, y: 1.5274953155132989, z: 4.683662390031124 },\n        { x: 3.0409624989238546, y: 1.76433738825175, z: -3.555230043268055 },\n        {\n          x: -4.721251023266457,\n          y: 1.2354922989397954,\n          z: -1.0878177947459262,\n        },\n        { x: 2.1518961827021106, y: 3.891904027152385, z: -2.285262755638206 },\n        { x: 0.8501960736517479, y: -2.851729208821255, z: -4.018060123480341 },\n        { x: 2.5631840141785176, y: 4.263234820997851, z: -0.5048926326370041 },\n        {\n          x: -0.4580143454812531,\n          y: -2.6523265200067385,\n          z: 4.213714144386437,\n        },\n      ],\n      radius: 5,\n      planGeometry: new THREE.PlaneBufferGeometry(1, 1), //默认在XOY平面上\n      group: null,\n      groupDots: null,\n      groupLines: null,\n      groupHalo: null,\n      aGroup: null,\n      WaveMeshArr: [], // 所有波动光圈集合\n      animateDots: [],\n      map: null,\n      width: null,\n      height: null,\n      renderer: null,\n      camera: null,\n      scene: null,\n      controls: null,\n      uniforms2: {\n        u_time: { value: 0.0 },\n      },\n      globeTextureLoader: null,\n      camaPositions: [\n        { x: 5, y: -20, z: 200 }, //远处\n        { x: 0.5, y: -2, z: 20 }, //近处\n      ],\n      initFlag: false,\n      stars: null,\n      vIndex: 0,\n      fragmentShader2: ``,\n      vertexShader2: ``,\n    };\n  },\n  mounted() {\n    this.onload();\n    let tc = this.lglt2xyz(121.130344, 31.458043);\n    console.log(\"tc\", tc);\n  },\n  methods: {\n    onload() {\n      const Dom = document.querySelector(\"#container\");\n      this.width = Dom.clientWidth;\n      this.height = Dom.clientHeight;\n      this.globeTextureLoader = new THREE.TextureLoader();\n      this.group = new THREE.Group();\n      this.groupDots = new THREE.Group();\n      this.groupLines = new THREE.Group();\n      this.groupHalo = new THREE.Group();\n      this.aGroup = new THREE.Group();\n      this.map = new THREE.Object3D();\n\n      this.fragmentShader2 = `#ifdef GL_ES\n        precision mediump float;\n        #endif\n        varying float opacity;\n     uniform vec3 color;\n     void main(){\n        if(opacity <=0.2){\n            discard;\n        }\n        gl_FragColor = vec4(color,1.0);\n      }`;\n      this.vertexShader2 = `\tvarying vec2 vUv;\n\t\t\tattribute float percent;\n\t\t\tuniform float u_time;\n\t\t\tuniform float number;\n\t\t\tuniform float speed;\n\t\t\tuniform float length;\n\t\t\tvarying float opacity;\n\t\t\tuniform float size;\n\t\t\tvoid main()\n\t\t\t{\n\t\t\tvUv = uv;\n\t\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t\t\tfloat l = clamp(1.0-length,0.0,1.0);\n\t\t\tgl_PointSize = clamp(fract(percent*number + l - u_time*number*speed)-l ,0.0,1.) * size * (1./length);\n\t\t\topacity = gl_PointSize/size;\n\t\t\tgl_Position = projectionMatrix * mvPosition;\n\t\t\t}`;\n\n      this.initRenderer();\n      this.initCamera();\n      this.initScene();\n      this.initLight();\n      // //初始化地球\n      this.initEarth();\n      // //卫星特效\n      // this.initSatellite();\n      // //地球光晕\n      this.initEarthSprite();\n      // //初始化动态星空背景\n      this.initPoints();\n      // //外圈中国描边高亮\n      this.initGeoJson();\n      this.initControls();\n      this.initTween();\n      this.initDotAndFly();\n\n      // // initGui();\n      this.animate();\n      window.addEventListener(\"resize\", this.onWindowResize(), false);\n    },\n\n    // 3D球面取点\n    getPots(radius, a, b) {\n      let x = radius * Math.sin(a) * Math.cos(b);\n      let y = radius * Math.sin(a) * Math.sin(b);\n      let z = radius * Math.cos(a);\n      return { x, y, z };\n    },\n\n    // three 经纬度转换\n    lglt2xyz(lng, lat) {\n      const theta = (90 + lng) * (Math.PI / 180);\n      const phi = (90 - lat) * (Math.PI / 180);\n      return new THREE.Vector3().setFromSpherical(\n        new THREE.Spherical(this.radius, phi, theta)\n      );\n    },\n\n    // 经纬度转换球面坐标\n    /*\n     * @param {地球半径} R\n     * @param {经度(角度值)} longitude\n     * @param {维度(角度值)} latitude\n     */\n    lon2xyz(R, longitude, latitude) {\n      let lon = (longitude * Math.PI) / 180; //转弧度值\n      let lat = (latitude * Math.PI) / 180; //转弧度值\n      lon = -lon; // three.js坐标系z坐标轴对应经度-90度，而不是90度\n      // 经纬度坐标转球面坐标计算公式\n      let x = R * Math.cos(lat) * Math.cos(lon);\n      let y = R * Math.sin(lat);\n      let z = R * Math.cos(lat) * Math.sin(lon);\n      // 返回球面坐标\n      return {\n        x: x,\n        y: y,\n        z: z,\n      };\n    },\n\n    // 经纬度转地球坐标\n    createPosition(lnglat) {\n      const spherical = new THREE.Spherical();\n      spherical.radius = this.radius;\n      const lng = lnglat[0];\n      const lat = lnglat[1];\n      const theta = (lng + 90) * (Math.PI / 180);\n      const phi = (90 - lat) * (Math.PI / 180);\n      spherical.phi = phi; //方位角\n      spherical.theta = theta; //倾斜角\n      const position = new THREE.Vector3();\n      position.setFromSpherical(spherical);\n      return position;\n    },\n\n    // 计算 v1 v2 的终点\n    getVCenter(v1, v2) {\n      const v = v1.add(v2);\n      return v.divideScalar(2);\n    },\n\n    // 计算V1，V2向量固定长度的点\n    getLenVcetor(v1, v2, len) {\n      const v1v2Len = v1.distanceTo(v2);\n      return v1.lerp(v2, len / v1v2Len);\n    },\n\n    // 随机设置点\n    setRandomDot(group) {\n      let icon1 = require(\"./assets/标注.png\");\n      let icon2 = require(\"./assets/标注光圈.png\");\n      let texture = new THREE.TextureLoader().load(icon1);\n      let texture2 = new THREE.TextureLoader().load(icon2);\n      this.posArr.map((e) => {\n        let dotMesh = this.createPointMesh(e, texture);\n        let waveMesh = this.createWaveMesh(e, texture2);\n        group.add(dotMesh);\n        group.add(waveMesh);\n        this.WaveMeshArr.push(waveMesh);\n      });\n    },\n\n    // 标注\n    createPointMesh(pos, texture) {\n      let material = new THREE.MeshBasicMaterial({\n        map: texture,\n        transparent: true, //使用背景透明的png贴图，注意开启透明计算\n        depthWrite: false, //禁止写入深度缓冲区数据\n      });\n\n      let mesh = new THREE.Mesh(this.planGeometry, material);\n      let size = this.radius * 0.04; // 矩形平面Mesh的尺寸\n      mesh.scale.set(size, size, size); // 设置Mesh大小\n      // 设置mesh大小\n      mesh.position.set(pos.x, pos.y, pos.z);\n      // mesh在球面的法线方向\n      let coordVec3 = new THREE.Vector3(pos.x, pos.y, pos.z).normalize();\n      // mesh在莫仍的xoy平面上,法线方向沿着z轴\n      let meshNormal = new THREE.Vector3(0, 0, 1);\n      // 四元数属性 .quaterion表示mesh的角度状态\n      // .setFromUnitVectors() 计算两个向量之间构成的四元数组\n      mesh.quaternion.setFromUnitVectors(meshNormal, coordVec3);\n      return mesh;\n    },\n\n    // 标注的光圈\n    createWaveMesh(pos, texture) {\n      let material = new THREE.MeshBasicMaterial({\n        color: 0x22ffcc,\n        map: texture,\n        transparent: true, //使用背景透明的png贴图，注意开启透明计算\n        opacity: 1.0,\n        // side: THREE.DoubleSide, //双面可见\n        depthWrite: false, //禁止写入深度缓冲区数据\n      });\n      let mesh = new THREE.Mesh(this.planGeometry, material);\n      let size = this.radius * 0.055; //矩形平面Mesh的尺寸\n      mesh.size = size; //自顶一个属性，表示mesh静态大小\n      mesh.scale.set(size, size, size); //设置mesh大小\n      mesh._s = Math.random() * 1.0 + 1.0; //自定义属性._s表示mesh在原始大小基础上放大倍数  光圈在原来mesh.size基础上1~2倍之间变化\n      mesh.position.set(pos.x, pos.y, pos.z);\n      // mesh姿态设置\n      // mesh在球面上的法线方向(球心和球面坐标构成的方向向量)\n      let coordVec3 = new THREE.Vector3(pos.x, pos.y, pos.z).normalize();\n      // mesh默认在XOY平面上，法线方向沿着z轴new THREE.Vector3(0, 0, 1)\n      let meshNormal = new THREE.Vector3(0, 0, 1);\n      // 四元数属性.quaternion表示mesh的角度状态\n      //.setFromUnitVectors();计算两个向量之间构成的四元数值\n      mesh.quaternion.setFromUnitVectors(meshNormal, coordVec3);\n      return mesh;\n    },\n\n    // 添加飞线\n    addLines(v0, v3) {\n      // 夹角\n      let angle = (v0.angleTo(v3) * 1.8) / Math.PI / 0.1; // 0 ~ Math.PI\n      let aLen = angle * 0.4,\n        hLen = angle * angle * 12;\n      let p0 = new THREE.Vector3(0, 0, 0);\n      // 法线向量\n      let rayLine = new THREE.Ray(p0, this.getVCenter(v0.clone(), v3.clone()));\n\n      // 顶点坐标\n      let vtop = rayLine.at(\n        hLen / rayLine.at(1, new THREE.Vector3(0, 0, 0)).distanceTo(p0),\n        new THREE.Vector3(0, 0, 0)\n      );\n      // 控制点坐标\n      let v1 = this.getLenVcetor(v0.clone(), vtop, aLen);\n      let v2 = this.getLenVcetor(v3.clone(), vtop, aLen);\n      // 绘制三维三次贝赛尔曲线\n      let curve = new THREE.CubicBezierCurve3(v0, v1, v2, v3);\n      let geometry = new LineGeometry();\n      let points = curve.getSpacedPoints(50);\n      let positions = [];\n      let colors = [];\n      let color = new THREE.Color();\n\n      /**\n       * HSL中使用渐变\n       * h — hue value between 0.0 and 1.0\n       * s — 饱和度 between 0.0 and 1.0\n       * l — 亮度 between 0.0 and 1.0\n       */\n      for (let j = 0; j < points.length; j++) {\n        color.setHSL(0.81666 + j, 0.88, 0.715 + j * 0.0025); // 粉色\n        colors.push(color.r, color.g, color.b);\n        positions.push(points[j].x, points[j].y, points[j].z);\n      }\n      geometry.setPositions(positions);\n      geometry.setColors(colors);\n\n      let matLine = new LineMaterial({\n        linewidth: 0.0006,\n        vertexColors: true,\n        dashed: false,\n      });\n      return {\n        curve: curve,\n        lineMesh: new Line2(geometry, matLine),\n      };\n    },\n\n    // 初始化渲染场景\n    initRenderer() {\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true,\n      });\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      this.renderer.setSize(this.width, this.height);\n      const containerDom = document.querySelector(\"#container\");\n      containerDom.appendChild(this.renderer.domElement);\n    },\n\n    // 初始化相机\n    initCamera() {\n      this.camera = new THREE.PerspectiveCamera(\n        45,\n        this.width / this.height,\n        1,\n        10000\n      );\n      this.camera.position.set(5, -20, 200);\n      this.camera.lookAt(0, 3, 0);\n      window.camera = this.camera;\n    },\n\n    // 初始化场景\n    initScene() {\n      this.scene = new THREE.Scene();\n      this.scene.background = new THREE.Color(0x020924);\n      this.scene.fog = new THREE.Fog(0x020924, 200, 1000);\n      window.scene = this.scene;\n    },\n\n    // 初始化用户交互\n    initControls() {\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n      // 使动画循环使用时阻尼或自转 意思是否有惯性\n      this.controls.enableDamping = true;\n      //是否自动旋转\n      this.controls.autoRotate = false;\n      this.controls.autoRotateSpeed = 2;\n      //是否开启右键拖拽\n      this.controls.enablePan = true;\n    },\n\n    // 动画过渡\n    initTween() {\n      let tweena = this.cameraCon(3000);\n      tweena.start();\n    },\n\n    cameraCon(time) {\n      let tween1 = new TWEEN.Tween(this.camaPositions[0])\n        .to(this.camaPositions[1], time)\n        .easing(TWEEN.Easing.Quadratic.InOut);\n\n      let update = () => {\n        this.camera.position.set(\n          this.camaPositions[0].x,\n          this.camaPositions[0].y,\n          this.camaPositions[0].z\n        );\n      };\n      tween1.onUpdate(update);\n      tween1.onComplete(function () {\n        this.initFlag = true;\n      });\n      return tween1;\n    },\n\n    // 初始化光\n    initLight() {\n      const ambientLight = new THREE.AmbientLight(0xcccccc, 1.1);\n      this.scene.add(ambientLight);\n      let directionalLight = new THREE.DirectionalLight(0xffffff, 0.2);\n      directionalLight.position.set(1, 0.1, 0).normalize();\n      let directionalLight2 = new THREE.DirectionalLight(0xff2ffff, 0.2);\n      directionalLight2.position.set(1, 0.1, 0.1).normalize();\n      this.scene.add(directionalLight);\n      this.scene.add(directionalLight2);\n      let hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444, 0.2);\n      hemiLight.position.set(0, 1, 0);\n      this.scene.add(hemiLight);\n      let directionalLight3 = new THREE.DirectionalLight(0xffffff);\n      directionalLight3.castShadow = true;\n      directionalLight3.shadow.camera.top = 18;\n      directionalLight3.shadow.camera.bottom = -10;\n      directionalLight3.shadow.camera.left = -52;\n      directionalLight3.shadow.camera.right = 12;\n      this.scene.add(directionalLight3);\n    },\n\n    // 初始化星空\n    initPoints() {\n      let starpng = require(\"./assets/gradient.png\");\n      let texture = new THREE.TextureLoader().load(starpng);\n      let positions = [];\n      let colors = [];\n      let geometry = new THREE.BufferGeometry();\n      for (let i = 0; i < 10000; i++) {\n        let vertex = new THREE.Vector3();\n        vertex.x = Math.random() * 2 - 1;\n        vertex.y = Math.random() * 2 - 1;\n        vertex.z = Math.random() * 2 - 1;\n        positions.push(vertex.x, vertex.y, vertex.z);\n        let color = new THREE.Color();\n        color.setHSL(\n          Math.random() * 0.2 + 0.5,\n          0.55,\n          Math.random() * 0.25 + 0.55\n        );\n        colors.push(color.r, color.g, color.b);\n      }\n      geometry.setAttribute(\n        \"position\",\n        new THREE.Float32BufferAttribute(positions, 3)\n      );\n      geometry.setAttribute(\n        \"color\",\n        new THREE.Float32BufferAttribute(colors, 3)\n      );\n      let starsMaterial = new THREE.PointsMaterial({\n        map: texture,\n        size: 1,\n        transparent: true,\n        opacity: 1,\n        vertexColors: true, //true：且该几何体的colors属性有值，则该粒子会舍弃第一个属性--color，而应用该几何体的colors属性的颜色\n        blending: THREE.AdditiveBlending,\n        sizeAttenuation: true,\n      });\n      this.stars = new THREE.Points(geometry, starsMaterial);\n      this.stars.scale.set(300, 300, 300);\n      this.scene.add(this.stars);\n    },\n\n    // 地球初始化\n    initEarth() {\n      let earth = require(\"./assets/earth2.jpg\");\n      let texture = this.globeTextureLoader.load(earth);\n      let globeGgeometry = new THREE.SphereGeometry(this.radius, 100, 100);\n      let globeMaterial = new THREE.MeshStandardMaterial({\n        map: texture,\n        side: THREE.DoubleSide,\n      });\n      let globeMesh = new THREE.Mesh(globeGgeometry, globeMaterial);\n      this.group.rotation.set(0.5, 2.9, 0.1);\n      this.group.add(globeMesh);\n      this.scene.add(this.group);\n\n      //  function (texture) {\n      //   let globeGgeometry = new THREE.SphereGeometry(this.radius, 100, 100);\n      //   let globeMaterial = new THREE.MeshStandardMaterial({\n      //     map: texture,\n      //     side: THREE.DoubleSide,\n      //   });\n      //   let globeMesh = new THREE.Mesh(globeGgeometry, globeMaterial);\n      //   this.group.rotation.set(0.5, 2.9, 0.1);\n      //   this.group.add(globeMesh);\n      //   console.log(\"this.group\", this.group);\n      //   this.scene.add(this.group);\n      // });\n    },\n\n    // 地球光晕效果\n    initEarthSprite() {\n      let EarthSprite = require(\"./assets/earth_aperture.png\");\n      let texture = this.globeTextureLoader.load(EarthSprite);\n      let spriteMaterial = new THREE.SpriteMaterial({\n        map: texture,\n        transparent: true,\n        opacity: 0.5,\n        depthWrite: false,\n      });\n      let sprite = new THREE.Sprite(spriteMaterial);\n      sprite.scale.set(this.radius * 3, this.radius * 3, 1);\n      this.group.add(sprite);\n    },\n\n    // 光柱特效\n    createLightPillar(pos) {\n      let height = this.radius * 0.1; // 光柱高度，和地球半径相关，这样调节地球半径，光柱尺寸跟着变化\n      let geometry = new THREE.PlaneBufferGeometry(this.radius * 0.05, height); // 默认在XOY平面上\n      geometry.rotateX(Math.PI / 2); //光柱高度方向旋转到z轴上\n      geometry.translate(0, 0, height / 2); //平移使光柱底部与XOY平面重合\n      let textureLoader = new THREE.TextureLoader(); // TextureLoader创建一个纹理加载器对象\n      let material = new THREE.MeshBasicMaterial({\n        map: textureLoader.load(\"./assets/光柱.png\"),\n        color: 0x44ffaa, //光柱颜色，光柱map贴图是白色，可以通过color调节颜色\n        transparent: true, //使用背景透明的png贴图，注意开启透明计算\n        side: THREE.DoubleSide, //双面可见\n        depthWrite: false, //是否对深度缓冲区有任何的影响\n      });\n      let mesh = new THREE.Mesh(geometry, material);\n      let group = new THREE.Group();\n      // 两个光柱交叉叠加\n      group.add(mesh, mesh.clone().rotateZ(Math.PI / 2)); //几何体绕x轴旋转了，所以mesh旋转轴变为z\n      group.position.set(pos.x, pos.y, pos.z); //设置mesh位置\n      let coordVec3 = new THREE.Vector3(pos.x, pos.y, pos.z).normalize();\n      let meshNormal = new THREE.Vector3(0, 0, 1);\n      // 四元数属性.quaternion表示mesh的角度状态\n      //.setFromUnitVectors();计算两个向量之间构成的四元数值\n      group.quaternion.setFromUnitVectors(meshNormal, coordVec3);\n      return group;\n    },\n\n    // 光柱底部矩形特效\n    createLightWaveMesh(pos, texture) {\n      let geometry = new THREE.PlaneBufferGeometry(1, 1); // 默认在XOY平面上\n      let material = new THREE.MeshBasicMaterial({\n        color: 0x22ffcc,\n        map: texture,\n        transparent: true, // 使用背景透明的png贴图，注意开启透明计算\n        // side: THREE.DoubleSide, // 双面可见\n        depthWrite: false, // 禁止写入深度缓冲区数据\n      });\n\n      let mesh = new THREE.Mesh(geometry, material);\n      let size = this.radius * 0.05; // 矩形平面Mesh的尺寸\n      mesh.scale.set(size, size, size);\n      return mesh;\n    },\n\n    // 光柱效果\n    initLightPillar() {\n      let texture = new THREE.TextureLoader().load(\"./assets/标注.png\");\n\n      let datas = [\n        {\n          lng: 86.39895905468748,\n          lat: 45.15923349468924, //合肥\n        },\n        {\n          lng: 106.54041,\n          lat: 29.40268, //重庆\n        },\n      ];\n      datas.forEach((e) => {\n        let pos = this.lglt2xyz(e.lng, e.lat);\n        let LightPillar = this.createLightPillar(pos);\n        this.groupDots.add(LightPillar);\n        let waveMesh = this.createLightWaveMesh(pos, texture);\n        LightPillar.add(waveMesh);\n      });\n    },\n\n    // 初始化点和曲线\n    initDotAndFly() {\n      // 创建标注点\n      // console.log(\"this.groupDots\", this.groupDots);\n      this.setRandomDot(this.groupDots);\n      // 随机点加载group上面\n      this.group.add(this.groupDots);\n      // 曲线\n      console.log(\"第一个坐标是多少\", this.groupDots.children[0].position);\n      this.groupDots.children.forEach((e) => {\n        if (this.groupDots.children[0].position.x == e.position.x) {\n          return true;\n        }\n        let line = this.addLines(\n          e.position,\n          this.groupDots.children[0].position\n        );\n        this.groupLines.add(line.lineMesh);\n        this.animateDots.push(line.curve.getPoints(100));\n      });\n      this.group.add(this.groupLines);\n      // 添加动画\n      for (let i = 0; i < this.animateDots.length; i++) {\n        const aGeo = new THREE.SphereGeometry(0.03, 0.03, 0.03);\n        const aMater = new THREE.MeshPhongMaterial({ color: \"#F8D764\" });\n        const aMesh = new THREE.Mesh(aGeo, aMater);\n        this.aGroup.add(aMesh);\n      }\n      this.vIndex = 0;\n      this.group.add(this.aGroup);\n      this.animateLine();\n    },\n    // 动画\n    animateLine() {\n      this.aGroup.children.forEach((elem, index) => {\n        const v = this.animateDots[index][this.vIndex];\n        elem.position.set(v.x, v.y, v.z);\n      });\n      this.vIndex++;\n      if (this.vIndex > 100) {\n        this.vIndex = 0;\n      }\n      setTimeout(this.animateLine, 20);\n    },\n\n    // 中国描边高亮\n    initGeoJson() {\n      let china = require(\"./models/china.json\");\n      let chinaOutLine = require(\"./models/china-outline.json\");\n\n      const loader = new THREE.FileLoader();\n      loader.load(\"./models/china.json\", () => {\n        // const jsonData = JSON.parse(china);\n        this.initMap(china);\n      });\n      loader.load(\"./models/china-outline.json\", () => {\n        this.outLineMap(chinaOutLine);\n      });\n    },\n\n    // 外围光\n    outLineMap(json) {\n      json.features.forEach((e) => {\n        // 新建一个省份容器:用来存放省份对应的模型和轮廓线\n        const province = new THREE.Object3D();\n        const coordinates = e.geometry;\n        coordinates.coordinates.forEach((multiPolygon) => {\n          multiPolygon.forEach((polygon) => {\n            // 这里的坐标要做2次使用：1次用来构建模型，1次用来构建轮廓线\n            if (polygon.length > 200) {\n              let v3ps = [];\n              for (let i = 0; i < polygon.length; i++) {\n                let pos = this.lglt2xyz(polygon[i][0], polygon[i][1]);\n                v3ps.push(pos);\n              }\n              let curve = new THREE.CatmullRomCurve3(v3ps, false /*是否闭合*/);\n              let color = new THREE.Vector3(\n                0.5999758518718452,\n                0.7798940272761521,\n                0.6181903838257632\n              );\n              let flyLine = this.initFlyLine(\n                curve,\n                {\n                  speed: 0.4,\n                  // color: randomVec3Color(),\n                  color: color,\n                  number: 3, //同时跑动的流光数量\n                  length: 0.2, //流光线条长度\n                  size: 3, //粗细\n                },\n                5000\n              );\n              province.add(flyLine);\n            }\n          });\n        });\n        this.map.add(province);\n      });\n      this.group.add(this.map);\n    },\n\n    // 地图\n    initMap(chinaJson) {\n      // 遍历省份构建模型\n      chinaJson.features.forEach((e) => {\n        // 新建一个省份容器：用来存放省份对应的模型和轮廓线\n        const province = new THREE.Object3D();\n        const coordinates = e.geometry;\n        coordinates.coordinates.forEach((multiPolygon) => {\n          multiPolygon.forEach((polygon) => {\n            const lineMaterial = new THREE.LineBasicMaterial({\n              color: 0xf19553,\n            });\n            const positions = [];\n            const linGeometry = new THREE.BufferGeometry();\n            for (let i = 0; i < polygon.length; i++) {\n              var pos = this.lglt2xyz(polygon[i][0], polygon[i][1]);\n              positions.push(pos.x, pos.y, pos.z);\n            }\n            linGeometry.setAttribute(\n              \"position\",\n              new THREE.Float32BufferAttribute(positions, 3)\n            );\n            const line = new THREE.Line(linGeometry, lineMaterial);\n            province.add(line);\n          });\n        });\n        this.map.add(province);\n      });\n      this.group.add(this.map);\n    },\n\n    /*\n     * @param curve {THREE.Curve} 路径,\n     * @param matSetting {Object} 材质配置项\n     * @param pointsNumber {Number} 点的个数 越多越细致\n     */\n\n    initFlyLine(curve, matSetting, pointsNumber) {\n      let points = curve.getPoints(pointsNumber);\n      let geometry = new THREE.BufferGeometry().setFromPoints(points);\n      const length = points.length;\n      let percents = new Float32Array(length);\n      for (let i = 0; i < points.length; i += 1) {\n        percents[i] = i / length;\n      }\n      geometry.addAttribute(\"percent\", new THREE.BufferAttribute(percents, 1));\n      const lineMaterial = this.initLineMaterial(matSetting);\n      let flyLine = new THREE.Points(geometry, lineMaterial);\n      return flyLine;\n    },\n\n    initLineMaterial(setting) {\n      const number = setting ? Number(setting.number) || 1.0 : 1.0;\n      const speed = setting ? Number(setting.speed) || 1.0 : 1.0;\n      const length = setting ? Number(setting.length) || 0.5 : 0.5;\n      const size = setting ? Number(setting.size) || 3.0 : 3.0;\n      const color = setting\n        ? setting.color || new THREE.Vector3(0, 1, 1)\n        : new THREE.Vector3(0, 1, 1);\n      const singleUniforms = {\n        u_time: this.uniforms2.u_time,\n        number: { type: \"f\", value: number },\n        speed: { type: \"f\", value: speed },\n        length: { type: \"f\", value: length },\n        size: { type: \"f\", value: size },\n        color: { type: \"v3\", value: color },\n      };\n      const lineMaterial = new THREE.ShaderMaterial({\n        uniforms: singleUniforms,\n        vertexShader: this.vertexShader2.textContent,\n        fragmentShader: this.fragmentShader2.textContent,\n        transparent: true,\n        //blending:THREE.AdditiveBlending,\n      });\n      return lineMaterial;\n    },\n\n    // 窗口变动\n    onWindowResize() {\n      this.camera.aspect = innerWidth / innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renders();\n      this.renderer.setSize(innerWidth, innerHeight);\n    },\n\n    // 渲染\n    renders() {\n      this.renderer.clear();\n      this.renderer.render(scene, camera);\n    },\n\n    // 更新\n    animate() {\n      window.requestAnimationFrame(() => {\n        if (this.controls) this.controls.update();\n        if (TWEEN) TWEEN.update();\n        if (this.initFlag) {\n          //光环\n          // this.groupHalo.rotation.z = this.groupHalo.rotation.z + 0.01;\n          this.group.rotation.y = this.group.rotation.y + 0.001;\n          // 所有波动光圈都有自己的透明度和大小状态\n          // 一个波动光圈透明度变化过程是：0~1~0反复循环\n          if (this.WaveMeshArr.length) {\n            this.WaveMeshArr.forEach(function (mesh) {\n              mesh._s += 0.007;\n              mesh.scale.set(\n                mesh.size * mesh._s,\n                mesh.size * mesh._s,\n                mesh.size * mesh._s\n              );\n              if (mesh._s <= 1.5) {\n                //mesh._s=1，透明度=0 mesh._s=1.5，透明度=1\n                mesh.material.opacity = (mesh._s - 1) * 2;\n              } else if (mesh._s > 1.5 && mesh._s <= 2) {\n                //mesh._s=1.5，透明度=1 mesh._s=2，透明度=0\n                mesh.material.opacity = 1 - (mesh._s - 1.5) * 2;\n              } else {\n                mesh._s = 1.0;\n              }\n            });\n          }\n        }\n        if (this.stars) {\n          this.stars.rotation.y += 0.0001;\n        }\n        this.uniforms2.u_time.value += 0.007;\n        this.renders();\n        this.animate();\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=1ab1effb&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1ab1effb\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","module.exports = __webpack_public_path__ + \"img/earth_aperture.b41001f2.png\";","module.exports = __webpack_public_path__ + \"img/gradient.a60226ea.png\";","module.exports = __webpack_public_path__ + \"img/earth2.97ab87cd.jpg\";","module.exports = __webpack_public_path__ + \"img/标注光圈.a177a804.png\";","module.exports = __webpack_public_path__ + \"img/标注.49496b27.png\";"],"sourceRoot":""}